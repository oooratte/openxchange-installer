---
- name: Generate passwords
  become: True
  become_method: sudo
  set_fact:
    mysql_ox_password: "{{ lookup('password', '../credentials/percona-server/ox length=32') }}"
    ox_oxadminmaster_password: "{{ lookup('password', '../credentials/openxchange/oxadminmaster length=32') }}"

- name: Enable OX repository
  become: True
  copy: 
    content: |
      deb http://software.open-xchange.com/products/appsuite/stable/appsuiteui/DebianJessie/ /
      deb http://software.open-xchange.com/products/appsuite/stable/backend/DebianJessie/ /
    dest: /etc/apt/sources.list.d/open-xchange.list 
    owner: root
    group: root
    mode: 0644 

- name: Import repository GPG key
  become: True
  apt_key:
    url: http://software.open-xchange.com/oxbuildkey.pub
    state: present

- name: Install OpenXchange server
  become: True
  apt: 
    name: "{{ item }}" 
    state: present
    update_cache: yes
  with_items:
    - open-xchange 
    - open-xchange-authentication-database
    - open-xchange-grizzly
    - open-xchange-admin
    - open-xchange-appsuite
    - open-xchange-appsuite-backend
    - open-xchange-appsuite-manifest
    - open-xchange-dav
    - open-xchange-push-dovecot
    - open-xchange-unifiedmail
    - open-xchange-passwordchange-database
    #- open-xchange-spamhandler-spamassassin 
    - open-xchange-mailfilter

- name: Create mysql database and users
  become: True
  command: "/opt/open-xchange/sbin/initconfigdb --configdb-pass='{{ mysql_ox_password }}' -a"
  args:
    creates: /var/lib/mysql/configdb

- name: Check wether oxinstaller has been run before
  shell: grep SERVER_NAME={{ ox_hostname }} /opt/open-xchange/etc/system.properties || exit 0
  register: oxinstall
  changed_when: False

- name: Run oxinstaller
  become: True
  command: >
    /opt/open-xchange/sbin/oxinstaller --no-license --servername="{{ ox_hostname }}"
    --configdb-pass="{{ mysql_ox_password }}" --master-pass="{{ ox_oxadminmaster_password }}"
    --network-listener-host=localhost --servermemory {{ ox_java_max_memory }}
  when: oxinstall.stdout.find('SERVER_NAME') != 0

- name: Configure mail.properties
  lineinfile: dest=/opt/open-xchange/etc/mail.properties regexp="{{ item.key }}=" line="{{ item.key }}={{ item.value }}"
  with_items:
    - { key: 'com.openexchange.mail.loginSource', value: 'mail' }
    - { key: 'com.openexchange.mail.mailServerSource', value: 'global' }
    - { key: 'com.openexchange.mail.transportServerSource', value: 'global' }

- name: Start and enable Open-xchange
  become: True
  service: name=open-xchange enabled=yes state=started

- name: Check server registration status
  shell: mysql configdb -e "select * from server where name = '{{ ox_hostname }}'"
  register: regcheck
  changed_when: False

- name: Allow server to start
  command: sleep 5
  when: regcheck.stdout == ""

- name: Register server
  become: True
  command: /opt/open-xchange/sbin/registerserver -n "{{ ox_hostname }}" -A oxadminmaster -P "{{ ox_oxadminmaster_password }}"
  when: regcheck.stdout == ""

- name: Create /var/opt/filestore
  become: True
  file: path=/var/opt/filestore state=directory owner=open-xchange group=open-xchange mode=0750

- name: Check filestore registration status
  shell: mysql configdb -e "select * from filestore where uri = 'file:/var/opt/filestore'"
  register: regcheck
  changed_when: False

- name: Register filestore
  become: True
  command: >
    /opt/open-xchange/sbin/registerfilestore -A oxadminmaster -P "{{ ox_oxadminmaster_password }}"
    -t file:/var/opt/filestore -s 1000000
  when: regcheck.stdout == ""

- name: Check database registration status
  shell: mysql configdb -e "select * from db_pool where name = 'oxdatabase'"
  register: regcheck
  changed_when: False

- name: Register database
  become: True
  command: >
    /opt/open-xchange/sbin/registerdatabase -A oxadminmaster -P "{{ ox_oxadminmaster_password }}"
    -n oxdatabase -p "{{ mysql_ox_password }}" -m true
  when: regcheck.stdout == ""
